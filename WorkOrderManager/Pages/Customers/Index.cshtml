@page "{searchString?}"
@model WorkOrderManager.Pages_Customers.IndexModel

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

<p>
    <a asp-page="Create">Create New</a>
    @* <a asp-page="./Search">Search</a> *@
</p>

<form>
    <p>
        Name: <input type="text" asp-for="SearchString" />
        <input type="submit" value="Filter" />
    </p>
</form>

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.Label(string.Format("Name")) @* @Html.DisplayNameFor(model => model.Customer[0].FullName) *@
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Customer[0].PhoneNumbers)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Customer[0].WorkOrders)
            </th>
            @*I'm commenting this out since we're just using the full name attribute
            <th>
                @Html.DisplayNameFor(model => model.Customer[0].LastName)
            </th>
            *@

            @* We should add in the ability to see how many cars each customer owns, current unfinished workorders, and a link to their specific work orders.*@

            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model.Customer) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.FullName)
            </td>

            <td>
                @Html.DisplayFor(modelItem => item.PhoneNumbers)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.WorkOrders)
            </td>
            @*<td>
                @Html.DisplayFor(modelItem => item.LastName)
            </td>*@
            <td>
                <a asp-page="./Edit" asp-route-id="@item.CustomerId">Edit</a> |
                <a asp-page="./Details" asp-route-id="@item.CustomerId">Details</a> |
                <a asp-page="./Delete" asp-route-id="@item.CustomerId">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>
